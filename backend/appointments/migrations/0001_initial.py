# Generated by Django 4.2.25 on 2025-10-30 00:14

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clinicians', '0001_initial'),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(help_text='Appointment start time (UTC, display in Australia/Sydney)')),
                ('end_time', models.DateTimeField(blank=True, help_text='Appointment end time (optional)', null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('checked_in', 'Checked In'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', help_text='Current appointment status', max_length=20)),
                ('reason', models.TextField(blank=True, help_text='Reason for appointment/chief complaint', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional appointment notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(help_text='Clinic location for this appointment', on_delete=django.db.models.deletion.PROTECT, related_name='appointments', to='clinicians.clinic')),
                ('clinician', models.ForeignKey(blank=True, help_text='Assigned clinician', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='clinicians.clinician')),
                ('patient', models.ForeignKey(help_text='Patient for this appointment', on_delete=django.db.models.deletion.PROTECT, related_name='appointments', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'db_table': 'appointments',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(help_text='Encounter start time')),
                ('end_time', models.DateTimeField(blank=True, help_text='Encounter end time', null=True)),
                ('type', models.CharField(blank=True, choices=[('ASSESSMENT', 'Initial Assessment'), ('FITTING', 'Fitting'), ('REVIEW', 'Review'), ('FOLLOW_UP', 'Follow-up'), ('OTHER', 'Other')], help_text='Type of encounter', max_length=50, null=True)),
                ('reason', models.TextField(blank=True, help_text='Reason for encounter', null=True)),
                ('summary', models.TextField(blank=True, help_text='Clinical summary/notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.OneToOneField(blank=True, help_text='Associated appointment (if any)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter', to='appointments.appointment')),
                ('clinician', models.ForeignKey(blank=True, help_text='Clinician who performed the encounter', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounters', to='clinicians.clinician')),
                ('patient', models.ForeignKey(help_text='Patient for this encounter', on_delete=django.db.models.deletion.PROTECT, related_name='encounters', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Encounter',
                'verbose_name_plural': 'Encounters',
                'db_table': 'encounters',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['patient', '-start_time'], name='encounters_patient_399149_idx'), models.Index(fields=['clinician', '-start_time'], name='encounters_clinici_850ec7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['clinic', '-start_time'], name='appointment_clinic__43b00d_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', '-start_time'], name='appointment_patient_4b4f60_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['clinician', '-start_time'], name='appointment_clinici_d63e33_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status', '-start_time'], name='appointment_status_9bd3b5_idx'),
        ),
    ]
