# Generated by Django 4.2.25 on 2025-10-31 18:50

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Template name', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, help_text="e.g., 'AT Report', 'Appointment', 'Invoice'", max_length=100)),
                ('subject', models.CharField(help_text='Email subject (can include {{variables}}', max_length=255)),
                ('body_html', models.TextField(help_text='HTML email body (can include {{variables}})')),
                ('body_text', models.TextField(blank=True, help_text='Plain text alternative')),
                ('is_active', models.BooleanField(default=True)),
                ('attach_pdf', models.BooleanField(default=False, help_text='Automatically attach PDF report')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'email_templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GmailConnection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_address', models.EmailField(help_text='Gmail address', max_length=254, unique=True)),
                ('display_name', models.CharField(blank=True, help_text="User's display name", max_length=255)),
                ('access_token', models.TextField(help_text='Encrypted access token')),
                ('refresh_token', models.TextField(help_text='Encrypted refresh token')),
                ('token_type', models.CharField(default='Bearer', max_length=50)),
                ('expires_at', models.DateTimeField(help_text='When the access token expires')),
                ('scopes', models.TextField(help_text='Space-separated OAuth2 scopes')),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary sending account')),
                ('connected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_refresh_at', models.DateTimeField(blank=True, null=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('emails_sent', models.IntegerField(default=0, help_text='Total emails sent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'gmail_connections',
                'ordering': ['-is_primary', '-connected_at'],
            },
        ),
        migrations.CreateModel(
            name='SentEmail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('to_addresses', models.TextField(help_text='Comma-separated recipient emails')),
                ('cc_addresses', models.TextField(blank=True, help_text='CC recipients')),
                ('bcc_addresses', models.TextField(blank=True, help_text='BCC recipients')),
                ('subject', models.CharField(max_length=500)),
                ('body_preview', models.TextField(blank=True, help_text='First 500 chars of body')),
                ('has_attachments', models.BooleanField(default=False)),
                ('attachment_names', models.TextField(blank=True, help_text='Comma-separated attachment filenames')),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed'), ('queued', 'Queued')], default='sent', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('gmail_message_id', models.CharField(blank=True, max_length=255)),
                ('gmail_thread_id', models.CharField(blank=True, max_length=255)),
                ('related_patient_id', models.CharField(blank=True, max_length=100)),
                ('related_appointment_id', models.CharField(blank=True, max_length=100)),
                ('related_report_type', models.CharField(blank=True, help_text="e.g., 'AT Report'", max_length=100)),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_by', models.CharField(blank=True, max_length=255)),
                ('connection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_emails', to='gmail_integration.gmailconnection')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_emails', to='gmail_integration.emailtemplate')),
            ],
            options={
                'db_table': 'sent_emails',
                'ordering': ['-sent_at'],
                'indexes': [models.Index(fields=['-sent_at'], name='sent_emails_sent_at_427f3a_idx'), models.Index(fields=['status'], name='sent_emails_status_531ec8_idx'), models.Index(fields=['related_patient_id'], name='sent_emails_related_a016a7_idx')],
            },
        ),
    ]
